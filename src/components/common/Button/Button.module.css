.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: var(--font-primary);
  font-weight: bold;
  border: none;
  border-radius: var(--border-radius-md);
  cursor: pointer;
  transition: all var(--transition-fast);
  position: relative;
  overflow: hidden;
}

/* Variants */
.primary {
  background-color: var(--primary-color);
  color: white;
}

.primary:hover:not(:disabled) {
  background-color: var(--primary-dark);
}

.secondary {
  background-color: var(--secondary-color);
  color: white;
}

.secondary:hover:not(:disabled) {
  background-color: var(--secondary-dark);
}

.success {
  background-color: var(--success-color);
  color: white;
}

.success:hover:not(:disabled) {
  filter: brightness(0.9);
}

.error {
  background-color: var(--error-color);
  color: white;
}

.error:hover:not(:disabled) {
  filter: brightness(0.9);
}

.warning {
  background-color: var(--warning-color);
  color: var(--text-primary);
}

.warning:hover:not(:disabled) {
  filter: brightness(0.9);
}

/* Sizes */
.small {
  padding: var(--spacing-xs) var(--spacing-sm);
  font-size: var(--font-size-small);
  min-height: 32px;
}

.medium {
  padding: var(--spacing-sm) var(--spacing-md);
  font-size: var(--font-size-medium);
  min-height: 40px;
}

.large {
  padding: var(--spacing-md) var(--spacing-lg);
  font-size: var(--font-size-large);
  min-height: 48px;
}

/* States */
.fullWidth {
  width: 100%;
}

.disabled {
  opacity: 0.7;
  cursor: not-allowed;
}

/* Loading State */
.loading {
  color: transparent !important;
  pointer-events: none;
}

.loading::after {
  content: "";
  position: absolute;
  width: 16px;
  height: 16px;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  border: 4px solid transparent;
  border-top-color: currentColor;
  border-radius: 50%;
  animation: button-loading-spinner 1s ease infinite;
}

@keyframes button-loading-spinner {
  from {
    transform: rotate(0turn);
  }
  to {
    transform: rotate(1turn);
  }
} 